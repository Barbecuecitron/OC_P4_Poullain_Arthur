from pick import pick
from os import system, name

print('View imported correctly')


def clear():
    if name == 'nt':
        _ = system('cls')
    else:
        _ = system('clear')


def should_create_new():
    question = 'Souhaitez-vous charger un tournoi enregistré ou en créer un nouveau ?'
    options = ['Créer un nouveau tournoi', 'Charger un tournoi']
    option, index = pick(options, question)
    return option


def display_match(games):
    clear()
    compteur = 1
    for match in (games):
        print('Match ' + str(compteur))
        print(match[0][0].nom + ' ' + str(match[0][0].points) + ' va affronter ' + match[1][0].nom + ' ' + str(
            match[1][0].points) + '\n')
        compteur += 1
    input("Appuyez sur Entrée pour ajouter les résultats.")

def pick_tournament_to_load(db_tournaments):
    question = 'Choisissez le tournoi à charger :'
    clean_options = []
    for filename in db_tournaments:
        filename_without_ext = filename.replace('.json', '')
        clean_options.extend([filename_without_ext])

    options = clean_options
    option, index = pick(options, question)
    return option


def pick_tournament_to_load(db_tournaments):
    question = 'Choisissez le tournoi à charger :'
    clean_options = []
    for filename in db_tournaments:
        filename_without_ext = filename.replace('.json', '')
        clean_options.extend([filename_without_ext])

    options = clean_options
    option, index = pick(options, question)
    return option


def pick_results(match, num_round):
    compteur = 1
    for ply in match:
        choix = [ply[0][0], ply[1][0], "Match nul"]
        question = 'Attribuez les points du round ' + str(num_round) + ' match ' + str(compteur)
        print(ply[0][0].GetName() + ' VS ' + ply[1][0].GetName())
        option, index = pick([choix[0].GetName(),choix[1].GetName()], question)
        if index == 2:
            ply[0][0].AddPoint(.5)
            ply[0][1] = .5
            ply[1][0].AddPoint(.5)
            ply[1][1] = .5
        elif index == 0:
            ply[0][0].AddPoint(1)
            ply[0][1] = 1
            ply[1][0].AddPoint(-1)
            ply[1][1] = 0

        elif index == 1:
            ply[1][0].AddPoint(1)
            ply[1][1] = 1
            ply[0][0].AddPoint(-1)
            ply[0][1] = 0
        compteur += 1

    for ply in match:
        print(ply[0][0].nom + '  = ' + str(ply[0][0].points))
        print(ply[1][0].nom + '  = ' + str(ply[1][0].points))


def enter_new_player():
    caracteristiques = {'nom': 'Nom du Joueur :', 'prenom': 'Prenom du joueur :',
                        'date': 'Date de naissance :', 'sexe':
                            'Sexe :'}
    new_player = {}
    for i, v in caracteristiques.items():
        print(caracteristiques[i])
        rep = input()
        new_player[i] = rep
    return new_player

def is_digit(input):
    if input.strip().isdigit():
        return True

def create_tournament():
    questions = {'nom': 'Nom du tournoi :', 'lieu': 'Lieu du tournoi :', 'date': 'Date du tournoi ( JJ/MM/AA ):', 'tours':
        'Nombre de tours :', 'temps': 'Contrôle du temps :', 'desc': 'Description / Remarques :'}
    reponses = {}
    types = {'nom': str, 'lieu': str, 'date': str, 'tours':
        int, 'temps': str, 'desc': str}

    for i, v in questions.items():
        print(questions[i])
        rep = input()

        while not is_digit(rep) and types[i] == int:
            print(questions[i])
            rep = input()
        reponses[i] = rep


    tournament_specs = {'nom': reponses['nom'],
                        'lieu': reponses['lieu'],
                        'date': reponses['date'],
                        'tours': int(reponses['tours']),
                        'temps': reponses['temps'],
                        'desc': reponses['desc']
                        }
    question = "Souhaitez vous créer un tournoi avec les caractéristiques listées ci-dessus ?"
    reponses = ['Valider le tournoi', 'Quitter']
    option, index = pick(reponses, question)
    if index == 0:
        return tournament_specs
    else:
        print('Vous avez quitté le programme.')
        quit()
